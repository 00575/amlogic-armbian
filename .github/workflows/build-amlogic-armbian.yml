name: Build amlogic armbian

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      set_release:
        description: "Select OS Release."
        required: false
        default: "jammy"
        type: choice
        options:
          - jammy
          - bullseye
      armbian_board:
        description: "Select Amlogic Board."
        required: false
        default: "all"
        type: choice
        options:
          - all
          - s905x3_s905d_s912
          - a311d
          - s922x
          - s922x-n2
          - s922x-reva
          - s905x3
          - s905x3-b
          - s905x2
          - s905x2-km3
          - s912
          - s912-m8s
          - s905d
          - s905d-ki
          - s905x
          - s905w
          - s905
          - s905l3a
          - s905l2
      armbian_kernel:
        description: "Select kernel version."
        required: false
        default: "5.10.135_5.15.50"
        type: choice
        options:
          - 5.4.210_5.10.135_5.15.50
          - 5.4.210_5.10.135
          - 5.10.135_5.15.50
          - 5.15.50_6.0.1
          - 5.4.210
          - 5.10.135
          - 5.15.50
          - 6.0.1
      auto_kernel:
        description: "Auto use the latest kernel."
        required: false
        default: true
        type: boolean
      armbian_size:
        description: "Set armbian rootfs size(Unit: MiB)."
        required: false
        default: "2560"
      armbian_fstype:
        description: "Select armbian rootfs type."
        required: false
        default: "ext4"
        type: choice
        options:
          - ext4
          - btrfs
      armbian_sign:
        description: "Set armbian custom name."
        required: false
        default: ""

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc 2>/dev/null
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "${TZ}"
          echo "ARMBIAN_RELEASE=${{ inputs.set_release }}" >> ${GITHUB_ENV}
          echo "status=success" >> ${GITHUB_OUTPUT}
      - name: Download source code
        id: down
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          git clone --depth 1 https://github.com/armbian/build.git
          echo "status=success" >> ${GITHUB_OUTPUT}
      - name: Compile Armbian [ ${{ env.ARMBIAN_RELEASE }} ]
        id: compile
        if: ${{ steps.down.outputs.status }} == 'success' && !cancelled()
        run: |
          # Compile method and parameter description: https://docs.armbian.com/Developer-Guide_Build-Options
          cd build/
          sudo ./compile.sh RELEASE=${{ env.ARMBIAN_RELEASE }} BOARD=odroidn2 BRANCH=current BUILD_DESKTOP=no HOST=armbian EXPERT=yes \
                            BUILD_MINIMAL=no KERNEL_ONLY=no KERNEL_CONFIGURE=no CLEAN_LEVEL=make,debs COMPRESS_OUTPUTIMAGE="sha"
          echo "build_tag=Armbian_Aml_${{ env.ARMBIAN_RELEASE }}_$(date +"%m.%d.%H%M")" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}
      - name: Clean up server space
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        run: |
          cd build/
            sudo rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null
          cd output/images/
            img_name="$(ls *.img | head -n 1)"
            img_version="$(echo ${img_name} | grep -oE '[2-9][2-9]\.[0-9]{1,2}\.[0-9]{1,2}' | head -n 1)"
            img_kernel="$(echo ${img_name} | grep -oE '[5-9]\.[0-9]{1,2}\.[0-9]{1,3}' | head -n 1)"
            sudo mv -f ${img_name} Armbian_${img_version}-trunk_${img_kernel}.img
            sudo pigz -9f *.img
            df -hT ${PWD}
      - name: Upload Armbian image to Release
        uses: ncipollo/release-action@main
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.compile.outputs.build_tag }}
          artifacts: build/output/images/*.img.gz
          allowUpdates: true
          token: ${{ secrets.workflow_token }}

      - name: Rebuild Armbian for Amlogic s9xxx
        uses: ophub/amlogic-s9xxx-armbian@main
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        with:
          build_target: armbian
          armbian_path: build/output/images/*.img.gz
          armbian_board: ${{ inputs.armbian_board }}
          armbian_kernel: ${{ inputs.armbian_kernel }}
          auto_kernel: ${{ inputs.auto_kernel }}
          armbian_size: ${{ inputs.armbian_size }}
          armbian_fstype: ${{ inputs.armbian_fstype }}
          armbian_sign: ${{ inputs.armbian_sign }}

      - name: Upload Rebuild image to Release
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.compile.outputs.build_tag }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.workflow_token }}
          body: |
            默认用户名：root
            默认密码：1234
            安装命令：armbian-install
            更新命令：armbian-update
            
